nodes:
  # describe known nodes; these can be both local or remote
  local:
    start: True # if we should start this node or not
    host: localhost
    ports:
      external_api: 3013
      internal_api: 3113
      internal_ws: 3114
  dev1:
    start: True
    host: localhost
    ports:
      external_api: 3013
      internal_api: 3113
      internal_ws: 3114
  dev2:
    start: True
    host: localhost
    ports:
      external_api: 3023
      internal_api: 3123
      internal_ws: 3124
  dev3:
    start: True
    host: localhost
    ports:
      external_api: 3033
      internal_api: 3133
      internal_ws: 3134
tests: # test specific settings
  test_ext_api:
    # Testing the external API
    node_to_test: dev2
    chain_data: py/tests/integration/data/bchain.txt
  test_use_cases:
    test_syncing:
      # Alice should be able to connect to peers on startup and download the
      # blockchain up to the current height.
      nodes:
        bob: dev1
        alice: dev2
      blocks_to_post: 7
      chain_data: py/tests/integration/data/bchain.txt

    test_persistence:
      # Bob's downloaded blockchain should persist between restarts. He should
      # only download updates to his blockchain when his node starts.
      nodes:
        bob: dev1
      blocks_to_post: 7
      chain_data: py/tests/integration/data/bchain.txt
